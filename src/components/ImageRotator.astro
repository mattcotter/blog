---
import matt1 from '../assets/matt-1.png';
import matt2 from '../assets/matt-2.png';
import matt3 from '../assets/matt-3.png';
import matt4 from '../assets/matt-4.png';
import matt5 from '../assets/matt-5.png';
import matt6 from '../assets/matt-6.png';
import matt7 from '../assets/matt-7.png';

const images = [matt1.src, matt2.src, matt3.src, matt4.src, matt5.src, matt6.src, matt7.src];
---
    <div class="text-lg md:text-xl space-y-4 bg-white/5 md:ml-5 text-white p-10 rounded-4xl box-shadow border-1 border-white">
    <h1>
      <a href="/about" id="aboutLink" class="about-link group inline-flex items-center no-underline">
        <span class="font-bold relative inline-block pb-1 transition-colors duration-300 animate-[text-rainbow-cycle_3s_linear_infinite_alternate] md:animate-none md:group-hover:animate-[text-rainbow-cycle_3s_linear_infinite_alternate]">
          Matt Cotter
          <span class="absolute bottom-0 left-0 w-full h-0.5 bg-blue-600 transition-all duration-300 ease-out md:h-0.5 md:bg-blue-400 md:group-hover:h-1 md:group-hover:bg-blue-600"></span>
          <span class="absolute bottom-0 left-0 w-full h-0.5 bg-purple-500 transition-all duration-300 ease-out delay-100 opacity-100 md:opacity-0 md:group-hover:opacity-100 md:group-hover:h-1"></span>
        </span>
        <img
          id="rotatingImage"
          src={images[0]}
          alt="Rotating Image"
          class="w-12 h-12 object-contain ml-2 inline-block"
          data-images={JSON.stringify(images)}
        />
      </a>
      <div id="custom-cursor" class="text-gray-900 bg-white">ðŸ‘‹ Hey, that's me!</div>
       is a front-end developer with over 12 years of experience, based in Cincinnati, Ohio.</h1>
    </div>
  
  <script is:inline type="module">
    const aboutLink = document.getElementById('aboutLink');
    const image = document.getElementById('rotatingImage');
    const images = JSON.parse(image.dataset.images || '[]');
    let index = 0;
    let rotationInterval;
    const cursor = document.getElementById('custom-cursor');

    // Custom cursor logic (stays the same, as it's for hover)
    aboutLink.addEventListener('mouseenter', () => cursor.style.opacity = 1);
    aboutLink.addEventListener('mouseleave', () => cursor.style.opacity = 0);
    aboutLink.addEventListener('mousemove', (e) => {
      cursor.style.left = `${e.pageX + 0}px`;
      cursor.style.top = `${e.pageY + 0}px`;
    });
  
    // Check for touch device capability (no hover)
    const isTouch = window.matchMedia('(hover: none)').matches;
    // Check if the screen width is less than the MD breakpoint (e.g., 768px)
    // This is for screens that might have hover capabilities but are still small.
    const isSmallScreen = window.innerWidth < 768; 

    const startRotation = () => {
      if (!rotationInterval) {
        rotationInterval = setInterval(() => {
          index = (index + 1) % images.length;
          image.src = images[index];
        }, 500);
      }
    };
  
    const stopRotation = () => {
      clearInterval(rotationInterval);
      rotationInterval = null;
      image.src = images[0]; // Reset to first image
      index = 0; // Reset index
    };
  
    // Image Rotation Logic
    if (isTouch || isSmallScreen) {
      // For pure touch devices OR screens smaller than desktop breakpoint, start rotation immediately
      startRotation();
      // On these devices, the rotation will continue indefinitely on load.
      // If you need a tap to stop it, add an event listener here.
    } else {
      // For desktop (non-touch, large screens), use existing hover logic
      aboutLink.addEventListener('mouseenter', startRotation);
      aboutLink.addEventListener('mouseleave', stopRotation);
    }
  </script>